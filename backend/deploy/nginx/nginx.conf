worker_processes  auto;                         # максимальное количество процессов
events {
    use epoll;
    worker_connections 1024;                    # до 4096 соединений на 1 воркер
    multi_accept on;                            # максимальное количество соединений
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log off;                             # отключение основного лога
    error_log /var/log/nginx/error.log crit;    # логгирование только критических ошибок

    keepalive_timeout  30;                      # Будет ждать 30 секунд перед закрытием keepalive соединения
    keepalive_requests 100;                     # Максимальное количество keepalive запросов от одного клиента

    client_max_body_size  10m;                  # Максимальный размер файлов
    client_body_timeout 10;                     # Будет ждать 10 секунд тело запроса от клиента, после чего сбросит соединение

    reset_timedout_connection on;               # Если клиент перестал читать отвечать, Nginx будет сбрасывать соединение с ним
    send_timeout 2;                             # Если клиент прекратит чтение ответа, Nginx подождет 2 секунды и сбросит соединение

    sendfile on;                                # Метод отправки данных sendfile более эффективен, чем стандартный метод read+write
    tcp_nodelay on;                             # Будет отправлять заголовки и и начало файла в одном пакете
    tcp_nopush on;

    gzip on;                                    # Включение gzip
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;          # Включение этих типов данных

    open_file_cache max=200000 inactive=20s;    # Определяет максимальное количество файлов и время в кеше
    open_file_cache_valid 60s;                  # Определяет через какое время информация будет удалена из кеша
    open_file_cache_min_uses 2;                 # Будет кешировать информацию о тех файлах, которые были использованы хотя бы 2 раза
    open_file_cache_errors on;                  # Будет кешировать информацию об отсутствующих файлах
}